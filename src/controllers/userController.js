const User = require("../models/User");
const bcrypt = require("bcrypt");

// üìÑ L·∫•y danh s√°ch t·∫•t c·∫£ ng∆∞·ªùi d√πng
exports.getAllUsers = async (req, res) => {
  try {
    const users = await User.findAll({
      attributes: ["id", "name", "email", "phone", "role", "createdAt"],
    });
    res.json({ success: true, data: users });
  } catch (err) {
    res.status(500).json({ success: false, error: err.message });
  }
};

// üìÑ L·∫•y th√¥ng tin 1 ng∆∞·ªùi d√πng
exports.getUserById = async (req, res) => {
  try {
    const user = await User.findByPk(req.params.id, {
      attributes: ["id", "name", "email", "phone", "role", "createdAt"],
    });
    if (!user)
      return res.status(404).json({ success: false, message: "Kh√¥ng t√¨m th·∫•y ng∆∞·ªùi d√πng!" });

    res.json({ success: true, data: user });
  } catch (err) {
    res.status(500).json({ success: false, error: err.message });
  }
};

// üìù C·∫≠p nh·∫≠t th√¥ng tin ng∆∞·ªùi d√πng (d√†nh cho admin)
exports.updateUser = async (req, res) => {
  try {
    const { name, phone, role } = req.body;
    const user = await User.findByPk(req.params.id);

    if (!user) {
      return res.status(404).json({ success: false, message: "Kh√¥ng t√¨m th·∫•y ng∆∞·ªùi d√πng!" });
    }

    user.name = name || user.name;
    user.phone = phone || user.phone;
    user.role = role || user.role;

    await user.save();
    res.json({ success: true, message: "C·∫≠p nh·∫≠t ng∆∞·ªùi d√πng th√†nh c√¥ng!", user });
  } catch (err) {
    res.status(500).json({ success: false, error: err.message });
  }
};

// ‚ùå X√≥a ng∆∞·ªùi d√πng
exports.deleteUser = async (req, res) => {
  try {
    const user = await User.findByPk(req.params.id);
    if (!user) return res.status(404).json({ success: false, message: "Ng∆∞·ªùi d√πng kh√¥ng t·ªìn t·∫°i!" });

    await user.destroy();
    res.json({ success: true, message: "X√≥a ng∆∞·ªùi d√πng th√†nh c√¥ng!" });
  } catch (err) {
    res.status(500).json({ success: false, error: err.message });
  }
};
